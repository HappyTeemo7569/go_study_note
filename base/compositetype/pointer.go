package main

import "fmt"

/**
指针
*/

func main() {
	var a int = 10
	//每个变量有2层含义：变量的内存，变量的地址
	fmt.Printf("a = %d\n", a)   //内存中存放的东西，也就是别墅里面的0或者1。
	fmt.Printf("&a = %v\n", &a) //内存的首地址，也就是0001。

	/*输出
	  a = 10
	  &a = 0xc000010080
	*/

	//现在需要存储这个地址，指针就是专门存放这种地址的。
	var p *int                             //定义指针类型变量,int型的数据就要用*int 为什么？因为要告诉后面8套都是我的。这个8是根据类型来的。
	p = &a                                 //把a的地址赋值给p
	fmt.Printf("p = %v, &a = %v\n", p, &a) //p = 0xc000010080, &a = 0xc000010080

	//再来改p里面的数据，会直接改动a
	*p = 666                               //*p操作的不是p的内存，是p所指向的内存(就是a)
	fmt.Printf("*p = %v, a = %v\n", *p, a) //*p = 666, a = 666

	//既然P是一个变量，那么它也肯定有地址存储
	fmt.Printf("&p = %v\n", &p)

	//再把这个地址用指针存储起来,需要再加一个*
	var p2 **int
	p2 = &p
	fmt.Printf("&p = %v\n", p2)
}
